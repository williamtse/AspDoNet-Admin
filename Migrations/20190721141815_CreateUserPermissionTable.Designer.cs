// <auto-generated />
using Admin.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Admin.Migrations
{
    [DbContext(typeof(AdminContext))]
    [Migration("20190721141815_CreateUserPermissionTable")]
    partial class CreateUserPermissionTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099");

            modelBuilder.Entity("Admin.Models.Menu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Icon");

                    b.Property<int>("Order");

                    b.Property<int>("ParentID");

                    b.Property<string>("Permission");

                    b.Property<string>("Title");

                    b.Property<string>("Uri");

                    b.HasKey("ID");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Admin.Models.Permission", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HttpMethods");

                    b.Property<string>("HttpPath");

                    b.Property<string>("Name");

                    b.Property<string>("Slug");

                    b.HasKey("ID");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Admin.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Slug");

                    b.HasKey("ID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Admin.Models.RoleMenu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MenuID");

                    b.Property<int>("RoleID");

                    b.HasKey("ID");

                    b.ToTable("RoleMenu");
                });

            modelBuilder.Entity("Admin.Models.RolePermission", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PermissionID");

                    b.Property<int>("RoleID");

                    b.HasKey("ID");

                    b.ToTable("RolePermission");
                });

            modelBuilder.Entity("Admin.Models.RoleUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RoleID");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("Admin.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avatar");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("RememberToken");

                    b.Property<string>("Salt");

                    b.Property<string>("Username");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Admin.Models.UserPermission", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PermissionID");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.ToTable("UserPermission");
                });
#pragma warning restore 612, 618
        }
    }
}
